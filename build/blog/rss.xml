<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="rss.xsl"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Code &amp; Life Blog</title>
        <link>https://github.com/blog</link>
        <description>Code &amp; Life Blog</description>
        <lastBuildDate>Sun, 02 Mar 2025 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Understanding the Event Loop Phases]]></title>
            <link>https://github.com/blog/event-loop-phases</link>
            <guid>https://github.com/blog/event-loop-phases</guid>
            <pubDate>Sun, 02 Mar 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[The Event Loop is the heart of asynchronous programming in Node.js. It allows Node.js to handle non-blocking I/O operations efficiently. Understanding its phases is crucial for writing performant applications.]]></description>
            <content:encoded><![CDATA[<p>The <strong>Event Loop</strong> is the heart of asynchronous programming in Node.js. It allows Node.js to handle non-blocking I/O operations efficiently. Understanding its <strong>phases</strong> is crucial for writing performant applications.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-overview-of-the-event-loop"><strong>🌍 Overview of the Event Loop</strong><a href="https://github.com/blog/event-loop-phases#-overview-of-the-event-loop" class="hash-link" aria-label="Direct link to -overview-of-the-event-loop" title="Direct link to -overview-of-the-event-loop">​</a></h2>
<p>Node.js is single-threaded but uses the <strong>libuv</strong> library to manage an asynchronous event-driven architecture. The event loop is responsible for scheduling and executing operations in different <strong>phases</strong>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-event-loop-phases"><strong>📌 Event Loop Phases</strong><a href="https://github.com/blog/event-loop-phases#-event-loop-phases" class="hash-link" aria-label="Direct link to -event-loop-phases" title="Direct link to -event-loop-phases">​</a></h3>
<p>The event loop has <strong>six phases</strong>, which execute in the following order:</p>
<ol>
<li><strong>Timers Phase</strong> ⏳</li>
<li><strong>I/O Callbacks Phase</strong> 🎯</li>
<li><strong>Idle, Prepare Phase</strong> 💤</li>
<li><strong>Poll Phase</strong> 🔄</li>
<li><strong>Check Phase</strong> ✅</li>
<li><strong>Close Callbacks Phase</strong> 🔚</li>
</ol>
<p>Let's dive deeper into each phase.</p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1️⃣-timers-phase-settimeout--setinterval"><strong>1️⃣ Timers Phase (setTimeout &amp; setInterval)</strong><a href="https://github.com/blog/event-loop-phases#1%EF%B8%8F%E2%83%A3-timers-phase-settimeout--setinterval" class="hash-link" aria-label="Direct link to 1️⃣-timers-phase-settimeout--setinterval" title="Direct link to 1️⃣-timers-phase-settimeout--setinterval">​</a></h3>
<ul>
<li>
<p>Executes <strong>callbacks</strong> scheduled by <code>setTimeout()</code> and <code>setInterval()</code>.</p>
</li>
<li>
<p>If a timer is due, its callback executes.</p>
</li>
<li>
<p>Example:</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">setTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'Timer callback'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'Synchronous Code'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>Output:</strong></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Synchronous Code</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Timer callback</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2️⃣-io-callbacks-phase"><strong>2️⃣ I/O Callbacks Phase</strong><a href="https://github.com/blog/event-loop-phases#2%EF%B8%8F%E2%83%A3-io-callbacks-phase" class="hash-link" aria-label="Direct link to 2️⃣-io-callbacks-phase" title="Direct link to 2️⃣-io-callbacks-phase">​</a></h3>
<ul>
<li>Executes deferred I/O callbacks, like network requests or file system operations.</li>
<li>Not for timers, <code>setImmediate</code>, or polling.</li>
</ul>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3️⃣-idle-prepare-phase"><strong>3️⃣ Idle, Prepare Phase</strong><a href="https://github.com/blog/event-loop-phases#3%EF%B8%8F%E2%83%A3-idle-prepare-phase" class="hash-link" aria-label="Direct link to 3️⃣-idle-prepare-phase" title="Direct link to 3️⃣-idle-prepare-phase">​</a></h3>
<ul>
<li>Used internally by <strong>libuv</strong>.</li>
<li>Rarely affects user applications.</li>
</ul>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4️⃣-poll-phase-core-of-event-loop"><strong>4️⃣ Poll Phase (Core of Event Loop)</strong><a href="https://github.com/blog/event-loop-phases#4%EF%B8%8F%E2%83%A3-poll-phase-core-of-event-loop" class="hash-link" aria-label="Direct link to 4️⃣-poll-phase-core-of-event-loop" title="Direct link to 4️⃣-poll-phase-core-of-event-loop">​</a></h3>
<ul>
<li>Retrieves new I/O events and executes <strong>callbacks</strong>.</li>
<li>If no timers are pending, the event loop <strong>waits for I/O</strong> before proceeding.</li>
<li>If no I/O is pending, it moves to the <strong>Check Phase</strong>.</li>
</ul>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="5️⃣-check-phase-setimmediate-execution"><strong>5️⃣ Check Phase (setImmediate Execution)</strong><a href="https://github.com/blog/event-loop-phases#5%EF%B8%8F%E2%83%A3-check-phase-setimmediate-execution" class="hash-link" aria-label="Direct link to 5️⃣-check-phase-setimmediate-execution" title="Direct link to 5️⃣-check-phase-setimmediate-execution">​</a></h3>
<ul>
<li>
<p>Executes <code>setImmediate()</code> callbacks.</p>
</li>
<li>
<p><code>setImmediate()</code> callbacks <strong>always run after the poll phase</strong>, before timers.</p>
</li>
<li>
<p>Example:</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">setImmediate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'setImmediate Callback'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">setTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'setTimeout Callback'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>Output (almost always):</strong></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">setImmediate Callback</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">setTimeout Callback</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ul>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="6️⃣-close-callbacks-phase"><strong>6️⃣ Close Callbacks Phase</strong><a href="https://github.com/blog/event-loop-phases#6%EF%B8%8F%E2%83%A3-close-callbacks-phase" class="hash-link" aria-label="Direct link to 6️⃣-close-callbacks-phase" title="Direct link to 6️⃣-close-callbacks-phase">​</a></h3>
<ul>
<li>Executes close event handlers, such as <code>socket.on('close', callback)</code>.</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-setimmediate-vs-settimeout0"><strong>🆚 setImmediate() vs setTimeout(0)</strong><a href="https://github.com/blog/event-loop-phases#-setimmediate-vs-settimeout0" class="hash-link" aria-label="Direct link to -setimmediate-vs-settimeout0" title="Direct link to -setimmediate-vs-settimeout0">​</a></h2>
<table><thead><tr><th>Feature</th><th><code>setImmediate()</code></th><th><code>setTimeout(0)</code></th></tr></thead><tbody><tr><td>Execution Order</td><td>Runs in <strong>Check Phase</strong></td><td>Runs in <strong>Timers Phase</strong></td></tr><tr><td>Priority</td><td>Higher in some cases</td><td>Lower due to timer scheduling</td></tr></tbody></table>
<p>Example:</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">setTimeout</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'setTimeout(0)'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">setImmediate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'setImmediate'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>Output (usually):</strong></p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">setImmediate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">setTimeout(0)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-conclusion"><strong>🎯 Conclusion</strong><a href="https://github.com/blog/event-loop-phases#-conclusion" class="hash-link" aria-label="Direct link to -conclusion" title="Direct link to -conclusion">​</a></h2>
<ul>
<li>The event loop cycles through these phases <strong>continuously</strong>.</li>
<li><code>setImmediate()</code> executes before <code>setTimeout(0)</code>, but it depends on the execution context.</li>
<li>Understanding the <strong>event loop phases</strong> helps optimize performance and debugging.</li>
</ul>
<p>Happy coding! 🚀</p>]]></content:encoded>
            <category>javascript</category>
            <category>eventloop</category>
            <category>nodejs</category>
        </item>
    </channel>
</rss>